services:
  elasticsearch:
    ports:
      - 127.0.0.1:9200:9200
    container_name: elasticsearch-container
    image: docker.elastic.co/elasticsearch/elasticsearch:7.16.1
    environment:
      - "discovery.type=single-node"
      - "xpack.security.enabled=false"
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:9200"]
      interval: 10s
      timeout: 5s
      retries: 5

  # TODO use the websockets based elastic indexer when the communication problems are solved
  elastic-indexer:
    #ports: 22112
    container_name: elastic-indexer
    image: multiversx/elastic-indexer:latest
    depends_on:
      elasticsearch:
        condition: service_healthy
    entrypoint: >
      /bin/bash -c "sed -i 's|http://localhost:9200|http://elasticsearch:9200|g' ./config/prefs.toml
      && sed -i 's|url = \"localhost:22111\"|url = \"0.0.0.0:22111\"|g' ./config/prefs.toml
      && cat ./config/prefs.toml
      && ./elasticindexer -log-level *:DEBUG"

  redis:
    image: "redis:alpine"
    command: redis-server
    ports:
      - "127.0.0.1:6379:6379"
    environment:
      - REDIS_REPLICATION_MODE=master

  api:
    ports:
      - 127.0.0.1:3001:3001
    container_name: api
    image: multiversx/mx-api-service:test1
    environment:
      MVX_ENV: devnet
      REDIS_IP: redis
      GATEWAY_URL: http://chain-simulator:8085
      ELASTICSEARCH_URL: http://elasticsearch:9200
    depends_on:
      elasticsearch:
        condition: service_healthy
      redis:
        condition: service_started
